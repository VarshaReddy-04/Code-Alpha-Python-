import requests

class StockPortfolio:
    def __init__(self):
        self.portfolio = {}

    def add_stock(self, symbol, shares):
        if symbol in self.portfolio:
            self.portfolio[symbol] += shares
        else:
            self.portfolio[symbol] = shares
        print(f"Added {shares} shares of {symbol}.")

    def remove_stock(self, symbol, shares):
        if symbol in self.portfolio:
            if self.portfolio[symbol] >= shares:
                self.portfolio[symbol] -= shares
                if self.portfolio[symbol] == 0:
                    del self.portfolio[symbol]
                print(f"Removed {shares} shares of {symbol}.")
            else:
                print("Not enough shares to remove.")
        else:
            print("Stock not in portfolio.")

    def get_stock_price(self, symbol):
        # Replace with a valid API URL and API Key for a real API
        url = f"https://api.example.com/stock/{symbol}/quote"  # Mock URL
        # response = requests.get(url, params={'apikey': 'YOUR_API_KEY'})
        
        # For demonstration, we'll mock the response
        response = {'latestPrice': 150}  # Mock price

        # Uncomment the following line when using a real API
        # response = response.json()
        return response.get('latestPrice', None)

    def get_portfolio_value(self):
        total_value = 0
        for symbol, shares in self.portfolio.items():
            price = self.get_stock_price(symbol)
            if price is not None:
                total_value += price * shares
            else:
                print(f"Could not retrieve price for {symbol}.")
        return total_value

    def display_portfolio(self):
        print("Current Portfolio:")
        for symbol, shares in self.portfolio.items():
            price = self.get_stock_price(symbol)
            if price is not None:
                print(f"{symbol}: {shares} shares @ ${price:.2f} each")
            else:
                print(f"{symbol}: {shares} shares (price unavailable)")
        total_value = self.get_portfolio_value()
        print(f"Total Portfolio Value: ${total_value:.2f}")


if __name__ == "__main__":
    portfolio = StockPortfolio()

    # Example usage
    portfolio.add_stock('AAPL', 10)
    portfolio.add_stock('GOOGL', 5)
    portfolio.remove_stock('AAPL', 2)
    
    portfolio.display_portfolio()
